version: '3.7'
services:
  frontend:
    build:
      context: ./frontend
      cache_from:
        - node:16-alpine
        - nginx:1.21.4-alpine
        - localhost:5000/webapp-frontend:latest
    depends_on:
      - backend
    image: localhost:5000/webapp-frontend:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./proxy.template:/etc/nginx/conf.d/proxy.template"
      - "/etc/letsencrypt:/etc/letsencrypt"
    environment:
      - SERVER=${SERVER}
      - STACK=${STACK}
    command: /bin/sh -c "envsubst '$$SERVER $$STACK' < /etc/nginx/conf.d/proxy.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
  backend:
    build:
      context: ./backend
      cache_from:
        - python:3.8-slim
        - localhost:5000/webapp-backend:latest
    environment:
      - DB_DATABASE=webapp
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - IS_DB_SQLITE=False
    depends_on:
      - postgresdb
    image: localhost:5000/webapp-backend:latest
    ports:
      - "8080:8080"
    secrets:
      - source: postgres_user
        target: db_user
      - source: postgres_password
        target: db_password
      - jwt_secret_key
  postgresdb:
    image: postgres:latest
    environment:
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB=webapp
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    secrets:
      - postgres_user
      - postgres_password
    ports:
      - "5432:5432"
secrets:
  postgres_user:
    external: true
  postgres_password:
    external: true
  jwt_secret_key:
    external: true
volumes:
  pgdata:
